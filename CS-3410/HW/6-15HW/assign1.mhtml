From: <Saved by Blink>
Subject: assign1
Date: Thu, 8 Jun 2016 21:40:06 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--MTAqcY4ednZGGK5PEN4U5RBSTAuoabPNecNhA1gTzP----"

------MultipartBoundary--MTAqcY4ednZGGK5PEN4U5RBSTAuoabPNecNhA1gTzP----
Content-Type: text/html
Content-ID: <frame-255-3F821254-C059-4A45-A75F-49FC14553FF7@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: http://grid.cs.gsu.edu/~jbhola/csc3410/Summer16/assign1_ana.html

<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"><html><head>=
<meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3DUTF-8">
 =20
  <title>assign1</title>
</head>
<body style=3D"color: rgb(0, 0, 0);" link=3D"#0000ee" alink=3D"#0000ee" vli=
nk=3D"#551a8b">
 <center><h2><u>Department of Computer Science.<br>
         Georgia State University</u></h2>
<p></p><h3>CSc 3410      _________________________________________         =
                                 J. L. Bhola
<br>Summer 2016 - Assignment #1 <br>
   Due June 15<sup>th</sup> 2016 - to be submitted in D2L Folder A #1 no la=
ter than 11:00 p.m. on this due date.=20
</h3></center>

<p>
<b><u> <font size=3D"4">Note:</font></u><font size=3D"4">
</font></b></p><ol><b><font size=3D"4">
   <li>For all assignments, always use comments to explain your program.
   </li><li>No copying allowed. If it is found that students copy from each=
 other (in the opinion of the instructor), all of these=20
       programs will get 0.
   </li><li>You must use the names given to name your program. Should you u=
se different names, <u>you would lose 5%
       of what each program is worth</u>.
</li></font></b></ol><b><font size=3D"4">
</font></b><font size=3D"4"><p><b><u>Objectives:</u></b>
</p><p>

</p><ol>
  <li>To gain experience with string objects.
  </li><li>To gain experience with arrays.
  </li><li>To gain experience with generic algorithms.
  </li><li>To gain experience with files - opening for input  and output.
</li></ol>
</font>

<font size=3D"4">
<u><b> Documentation:</b></u><p>
</p><ol>
  <li>Explain the purpose of the program as detail as possible -<b>=20
10%.</b>
  </li><li>Develop a solution for the problem and mention algorithms to be=
=20
used -<b>10% </b>
  </li><li>List data structures to be used in solution. -  <b>5%.</b>
  </li><li>Give a description of how to use the program and expected=20
input/output - <b> 5%</b>
  </li><li>Explain the purpose of each class you develop in the program. -=
=20
<b>5%.</b>
</li></ol><p>
<u><b>Programming:</b></u></p><p>
</p><ol>
  <li>For each method, give the pre and post conditions and invariant,=20
if any - <b> 10%</b>
  </li><li>Program execution <b><u>according to the requirements given=20
</u></b> <b> 45%</b>
  </li><li>Naming of program as required                                   =
    =20
<b> 5%</b>
  </li><li>Print out of source code                                        =
    =20
<b> 5%</b>
</li></ol>
</font>

<font size=3D"4">
<p><b><u>Description of program:</u></b>
</p></font><p><font size=3D"4">
You are to write a program name <b>anagram.java</b> that prompt=20
the user for a user input file, reads the input words and computes anagram
of words. An anagram of a word is a permutation of the letters in that
word; for example, =E2=80=9Cstop=E2=80=9D is an anagram of =E2=80=9Ctops=E2=
=80=9D.</font>

</p><p class=3D"MsoNormal"><span style=3D"font-size: 12pt;">As indicated, t=
he
input to the program is a list of words from a <span style=3D"font-weight: =
bold;">user input file</span>. The output is a list
containing the same words, but with anagrams displayed on the same line bot=
h
on the screen and the output file. The output file must be named <b>=20
output.txt.</b><o:p></o:p></span></p>

<p class=3D"MsoNormal"><span style=3D"font-size: 12pt;"><o:p></o:p></span><=
/p>
<p class=3D"MsoNormal"><span style=3D"font-size: 12pt;">The input file, may=
 look like the=20
following: <span style=3D"font-weight: bold; text-decoration: underline;">Y=
ou must prompt
the user for the name of the input file.</span><o:p></o:p></span></p>
<p class=3D"MsoNormal"><span style=3D"font-size: 12pt;"><o:p></o:p></span><=
/p>
<p class=3D"MsoNormal"><span style=3D"font-size: 12pt;">Pans naps<o:p></o:p=
></span></p>
<p class=3D"MsoNormal"><span style=3D"font-size: 12pt;">Pots<o:p></o:p></sp=
an></p>
<p class=3D"MsoNormal"><span style=3D"font-size: 12pt;">opt this that<o:p><=
/o:p></span></p>
<p class=3D"MsoNormal"><span style=3D"font-size: 12pt;">Sit<o:p></o:p></spa=
n></p>
<p class=3D"MsoNormal"><span style=3D"font-size: 12pt;">it=E2=80=99s<o:p></=
o:p></span></p>
<p class=3D"MsoNormal"><span style=3D"font-size: 12pt;">snap<o:p></o:p></sp=
an></p>
<p class=3D"MsoNormal"><span style=3D"font-size: 12pt;"><o:p></o:p></span><=
/p>
<p class=3D"MsoNormal"><span style=3D"font-size: 12pt;">and
so on.<o:p></o:p></span></p>
<p class=3D"MsoNormal"><span style=3D"font-size: 12pt;"><o:p></o:p></span><=
/p>
<p class=3D"MsoNormal"><span style=3D"font-size: 12pt;"><span style=3D"font=
-weight: bold; text-decoration: underline;">

Executing a program, example:</span><o:p></o:p></span></p>
<p class=3D"MsoNormal"><span style=3D"font-size: 12pt;"><o:p></o:p></span><=
/p>
<p class=3D"MsoNormal"><span style=3D"font-size: 12pt;">C:\&gt;java anagram=
=20
<b><u>OR</u></b> C:\java -jar anagram.jar [Enter]
<o:p></o:p></span></p>
<p class=3D"MsoNormal"><span style=3D"font-size: 12pt;"><o:p><span style=3D=
"font-weight: bold;">&nbsp;Enter the name of the input
file:&nbsp; input.dat </span>[Enter]<br>
</o:p></span></p>
<p class=3D"MsoNormal"><span style=3D"font-size: 12pt;">Pans
snap naps<o:p></o:p></span></p>
<p class=3D"MsoNormal"><span style=3D"font-size: 12pt;">Sit it's<o:p></o:p>=
</span></p>
<p class=3D"MsoNormal"><span style=3D"font-size: 12pt;">opt<o:p></o:p></spa=
n></p>

<p class=3D"MsoNormal"><span style=3D"font-size: 12pt;">Pots<o:p></o:p></sp=
an></p>
<p class=3D"MsoNormal"><span style=3D"font-size: 12pt;">this<o:p></o:p></sp=
an></p>
<p class=3D"MsoNormal"><span style=3D"font-size: 12pt;">that<o:p></o:p></sp=
an></p>

<p class=3D"MsoNormal"><span style=3D"font-size: 12pt;"><o:p></o:p></span><=
/p>
<p class=3D"MsoNormal"><span style=3D"font-size: 12pt;"><span style=3D"font=
-weight: bold; text-decoration: underline;">Here
are some requirements for the program:</span><o:p></o:p></span></p>
<p class=3D"MsoNormal" style=3D"margin-left: 0.25in; text-indent: -0.25in;"=
><!--[if !supportLists]--><span style=3D"font-size: 12pt;"><span style=3D""=
>1.<span style=3D"font-family: &quot;Times New Roman&quot;; font-style: nor=
mal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height=
: normal; font-stretch: normal; font-size-adjust: none;">&nbsp;&nbsp;&nbsp;=
&nbsp;
</span></span></span><!--[endif]--><span style=3D"font-size: 12pt;">When
determining if two words
are anagrams, the program must treat upper and lower case letters as
equivalent
(thus =E2=80=9CPans=E2=80=9D and =E2=80=9Csnap=E2=80=9D are anagrams) and i=
gnore punctuation marks
(=E2=80=9Cit=E2=80=99s=E2=80=9D and
=E2=80=9CSit=E2=80=9D are anagrams). However, the program must display word=
s with their
original capitalization and punctuation =E2=80=93 as shown above. <o:p></o:=
p></span></p>
<p class=3D"MsoNormal"><span style=3D"font-size: 12pt;"><o:p></o:p></span><=
/p>
<p class=3D"MsoNormal" style=3D"margin-left: 0.25in; text-indent: -0.25in;"=
><!--[if !supportLists]--><span style=3D"font-size: 12pt;"><span style=3D""=
>2.<span style=3D"font-family: &quot;Times New Roman&quot;; font-style: nor=
mal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height=
: normal; font-stretch: normal; font-size-adjust: none;">&nbsp;&nbsp;&nbsp;=
&nbsp;
</span></span></span><!--[endif]--><span style=3D"font-size: 12pt;">The
=E2=80=9Cword=E2=80=9D is assumed to be
any series of nonblank characters; words may be separated by any number
of
white-space characters. Any number of words may appear on a
line,&nbsp;&nbsp; <br>
including
none. You may assume that no word is more than 12 characters long. And
maximum
number of words would be 50.<span style=3D""><br>
</span></span></p>
<p class=3D"MsoNormal" style=3D"margin-left: 0.25in; text-indent: -0.25in;"=
><span style=3D"font-size: 12pt;"><span style=3D"">3.<span style=3D"font-fa=
mily: &quot;Times New Roman&quot;; font-style: normal; font-variant: normal=
; font-weight: normal; font-size: 7pt; line-height: normal; font-stretch: n=
ormal; font-size-adjust: none;">&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><!--[endif]--><span style=3D"font-size: 12pt;">The
program must work even
if the input file is empty. If this is the case print a message saying
that =E2=80=9C<b style=3D"">the input file is empty</b>=E2=80=9D and then
terminate the program.<o:p></o:p></span></p>
<p class=3D"MsoNormal"><span style=3D"font-size: 12pt;"><o:p></o:p></span><=
/p>
<p class=3D"MsoNormal" style=3D"margin-left: 0.25in; text-indent: -0.25in;"=
><!--[if !supportLists]--><span style=3D"font-size: 12pt;"><span style=3D""=
>4.<span style=3D"font-family: &quot;Times New Roman&quot;; font-style: nor=
mal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height=
: normal; font-stretch: normal; font-size-adjust: none;">&nbsp;&nbsp;&nbsp;=
&nbsp;
</span></span></span><!--[endif]--><span style=3D"font-size: 12pt;">The
program must test the
number of characters per word. If a word consist of more than 12
characters,
the program should ignore that word and continue. That word would also
be
ignored in the total number of words of 50.<o:p></o:p></span></p>
<p class=3D"MsoNormal"><span style=3D"font-size: 12pt;"><o:p></o:p></span><=
/p>
<p class=3D"MsoNormal" style=3D"margin-left: 0.25in; text-indent: -0.25in;"=
><!--[if !supportLists]--><span style=3D"font-size: 12pt;"><span style=3D""=
>5.<span style=3D"font-family: &quot;Times New Roman&quot;; font-style: nor=
mal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height=
: normal; font-stretch: normal; font-size-adjust: none;">&nbsp;&nbsp;&nbsp;=
&nbsp;
</span></span></span><!--[endif]--><span style=3D"font-size: 12pt;">The
program must also test
the number of words. If there are more than 50 words, print a message
saying
that =E2=80=9C<b style=3D"">there are more than 50 words in
the input file</b>=E2=80=9D and then terminate the program<o:p></o:p></span=
></p>

<p class=3D"MsoNormal"><span style=3D"font-size: 12pt;"><o:p></o:p></span><=
/p>
<p class=3D"MsoNormal"><b style=3D""><span style=3D"font-size: 12pt;">Algor=
ithm:<o:p></o:p></span></b></p>
<p class=3D"MsoNormal"><span style=3D"font-size: 12pt;"><o:p></o:p></span><=
/p>
<p class=3D"MsoBodyText">
<font size=3D"4">Use efficient algorithms. The first insight is to create a
=E2=80=9Csignature=E2=80=9D for each word by sorting the letters in the wor=
d&nbsp;
after removing punctuations.</font></p>
<p class=3D"MsoNormal"><span style=3D"font-size: 12pt;"><o:p>&nbsp;</o:p></=
span></p>
<h1><small><small><small>Original Word</small></small></small>
<span style=3D""><small><small><small>&nbsp;</small></small></small>&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><small><small><small>Signature</small></small></small></h1>

<p class=3D"MsoNormal"><span style=3D"font-size: 12pt;">Pans<span style=3D"=
">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>anps<o:p></o:p></span><br>

Pots<span style=3D"">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>opts<o:p></o:p><br>


<span style=3D"font-size: 12pt;">opt<span style=3D"">&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>opt<o:p></o:p><br>

Sit<span style=3D"">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;
</span>ist<o:p></o:p><br>

it=E2=80=99s<span style=3D"">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;
</span>ist<o:p></o:p><br>

snap<span style=3D"">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>anps<o:p></o:p></span></p>

<p class=3D"MsoNormal"><span style=3D"font-size: 12pt;"><o:p>&nbsp;</o:p></=
span></p>
<p class=3D"MsoNormal"><span style=3D"font-size: 12pt;">Upper
case are converted to lower case and <b style=3D"">non-alphabetic
characters</b> (eg. <b style=3D"">/&lt;&gt;[{</b>) are
removed before the signature is computed. Punctuation marks are also
ignored
when computing signatures.<o:p></o:p></span></p>
<p class=3D"MsoNormal"><span style=3D"font-size: 12pt;"><o:p></o:p></span><=
/p>
<p class=3D"MsoNormal"><span style=3D"font-size: 12pt;">Creating
signatures for words makes it easy to check whether two words are
anagrams.
However, we still have the problem of (apparently) having to compare
every
input word against every other input word. Actually, all we need to do
is sort
the <b style=3D"">lines</b> by their signatures.<o:p></o:p></span></p>
<p class=3D"MsoNormal"><span style=3D"font-size: 12pt;"><o:p>&nbsp;</o:p></=
span></p>
<h1><small><small><small>Original Word</small></small></small><span style=
=3D"">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><small><small=
><small>Signature</small></small></small></h1>
<p class=3D"MsoNormal"><span style=3D"font-size: 12pt;">Pans<span style=3D"=
">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>anps<o:p></o:p></span></p>
<p class=3D"MsoNormal"><span style=3D"font-size: 12pt;">snap<span style=3D"=
">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style=3D"">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>anps<o:p=
></o:p></span></p>
<p class=3D"MsoNormal"><span style=3D"font-size: 12pt;">Sit<span style=3D""=
>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;
</span>ist<o:p></o:p></span></p>
<p class=3D"MsoNormal"><span style=3D"font-size: 12pt;">it=E2=80=99s<span s=
tyle=3D"">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;
</span>ist<o:p></o:p></span></p>
<p class=3D"MsoNormal"><span style=3D"font-size: 12pt;">Pots<span style=3D"=
">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>opts<o:p></o:p></span></p>
<p class=3D"MsoNormal"><span style=3D"font-size: 12pt;">opt<span style=3D""=
>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;
</span>opt<o:p></o:p></span></p>
<p class=3D"MsoNormal"><span style=3D"font-size: 12pt;"><o:p>&nbsp;</o:p></=
span></p>
<p class=3D"MsoNormal"><span style=3D"font-size: 12pt;">We
next make a pass over from top to bottom, printing the original words.
The
words that have the same signature are anagrams, so we print them on
the same
line:<o:p><br>
&nbsp;</o:p><br>
Pans
snap<o:p></o:p></span></p>
<p class=3D"MsoNormal"><span style=3D"font-size: 12pt;">Pots<o:p></o:p></sp=
an></p>
<p class=3D"MsoNormal"><span style=3D"font-size: 12pt;">Sit
it=E2=80=99s<o:p></o:p></span></p>
<p class=3D"MsoNormal"><span style=3D"font-size: 12pt;">opt<o:p></o:p></spa=
n></p>
<p class=3D"MsoNormal"><span style=3D"font-size: 12pt;"><o:p>&nbsp;</o:p></=
span></p>
<p class=3D"MsoNormal"><b style=3D""><span style=3D"font-size: 12pt;">Imple=
mentation:<o:p></o:p></span></b></p>
<p class=3D"MsoBodyText"><font size=3D"4">Use as many generic algorithm as =
possible so
that the size
of the program can be reduced.</font></p>
<p class=3D"MsoNormal"><span style=3D"font-size: 12pt;"><o:p>&nbsp;</o:p></=
span></p>
<p class=3D"MsoNormal"><span style=3D"font-size: 12pt;"><o:p></o:p></span><=
/p>
<p class=3D"MsoNormal" align=3D"center" style=3D"text-align: center;"><b st=
yle=3D""><u><span style=3D"font-size: 12pt;">What to
turn in:<o:p></o:p></span></u></b></p>
<p class=3D"MsoNormal"><span style=3D"font-size: 12pt;"><o:p></o:p></span><=
/p>
<p class=3D"MsoNormal"><o:p></o:p></p>
<p class=3D"MsoNormal" style=3D"margin-left: 0.25in; text-indent: -0.25in;"=
><!--[if !supportLists]-->
<span style=3D"font-size: 12pt;"><span style=3D"">



</span></span></p><ol start=3D"1" type=3D"1">
 <li class=3D"MsoNormal" style=3D"mso-margin-top-alt:auto;mso-margin-bottom=
-alt:auto;
     mso-list:l3 level1 lfo4;tab-stops:list .5in"><span style=3D"mso-fareas=
t-font-family:
     &quot;Times New Roman&quot;"><u1:p></u1:p>


</span>All of the .java and the .class/jar files at the D2L website in the
Dropbox folder for A#1 no later than 11:00 p.m on the respective due date.<=
o:p></o:p><br>

 </li><li class=3D"MsoNormal" style=3D"mso-margin-top-alt:auto;mso-margin-b=
ottom-alt:auto;
     mso-list:l3 level1 lfo4;tab-stops:list .5in"><span style=3D"mso-fareas=
t-font-family:
     &quot;Times New Roman&quot;">Turn in listings (hard copies) of all sou=
rce files to the TA on the first Lab you meet with the TA after this due da=
te. <o:p></o:p></span></li>
 <li class=3D"MsoNormal" style=3D"mso-margin-top-alt:auto;mso-margin-bottom=
-alt:auto;
     mso-list:l3 level1 lfo4;tab-stops:list .5in"><span style=3D"mso-fareas=
t-font-family:
     &quot;Times New Roman&quot;">Please mark your name prominently on the =
(print out)=20
     listings. <o:p></o:p></span></li>
</ol>

<p><b>Should you use any subdirectory (whatsoever) your program would not b=
e
graded and you will receive a 0 (zero).</b> </p>





</body></html>
------MultipartBoundary--MTAqcY4ednZGGK5PEN4U5RBSTAuoabPNecNhA1gTzP------
